import glob
import os

BASE = """
# FILE AUTOGENERATED BY gen_dtypes.py - DO NOT EDIT

import custom_interfaces
from std_msgs.msg import String

def get_dtype(dtype: str):
    match dtype:
        case "String":
            return String()
"""

CASE_TEMPLATE = """
        case "{type}":
            return custom_interfaces.{type}()
"""

ROS_PACKAGES_DIR = os.path.join(
    os.getenv("ROS_WORKSPACE", default="/workspaces/sailbot_workspace"), "src"
)
CUSTOM_INTERFACES_MSG_DIR = os.path.join(ROS_PACKAGES_DIR, "custom_interfaces/msg")
OUTPUT_FILE = os.path.join(ROS_PACKAGES_DIR, "global_launch/integration/dtypes.py")


def detect_custom_intfs():
    files = glob.glob("{}/*.msg".format(CUSTOM_INTERFACES_MSG_DIR))
    intfs: list[str] = []
    for file in files:
        intf = file.split(".")[0]  # Get rid of file extension
        intf = intf.split("/")[-1]  # Get rid of full path
        intfs.append(intf)
    return intfs


def build_output():
    output = BASE
    for intf in detect_custom_intfs():
        scenario = CASE_TEMPLATE.format(type=intf)
        output += scenario
    return output


def gen_dtypes():
    content = build_output()
    with open(OUTPUT_FILE, "w") as outfile:
        outfile.write(content)


if __name__ == "__main__":
    gen_dtypes()
