{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../src/cli.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,yCAA2C;AAC3C,kDAAyC;AACzC,4DAAuE;AAEvE,MAAM,OAAO,GAAG,IAAI,mBAAO,EAAE,CAAA;AAC7B,OAAO,CAAC,OAAO,CAAC,sBAAO,CAAC,CAAA;AAExB,OAAO;KACJ,OAAO,CAAC,QAAQ,CAAC;KACjB,SAAS,CAAC,YAAY,CAAC;KACvB,MAAM,CAAC,4BAA4B,EAAE,8CAA8C,CAAC;KACpF,SAAS,CAAC,IAAI,kBAAM,CAAC,4BAA4B,EAAE,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAAC;KACnG,SAAS,CAAC,IAAI,kBAAM,CAAC,0BAA0B,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC,CAC9F;KACA,WAAW,CACV,0GAA0G,EAC1G;IACE,KAAK,EACH,2CAA2C;CAC9C,CACF;KACA,MAAM,CAAC,CAAO,KAAe,EAAE,OAAsB,EAAE,EAAE;IACxD,MAAM,IAAA,6BAAa,EAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;AACjG,CAAC,CAAA,CAAC,CAAA;AAEJ,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA","sourcesContent":["import { Command, Option } from 'commander'\nimport { version } from '../package.json'\nimport { formatCommand, FormatOptions } from './commands/formatCommand'\n\nconst program = new Command()\nprogram.version(version)\n\nprogram\n  .command('format')\n  .arguments('[files...]')\n  .option('-l, --language <ISO 639-1>', 'specify the language (dialect) of the source')\n  .addOption(new Option('-f, --from-syntax <syntax>', 'from syntax').choices(['gherkin', 'markdown']))\n  .addOption(new Option('-t, --to-syntax <syntax>', 'to syntax').choices(['gherkin', 'markdown'])\n  )\n  .description(\n    `Formats one or more files. STDIN is formatted and written to STDOUT (assuming gherkin syntax by default)`,\n    {\n      files:\n        'One or more .feature or .feature.md files',\n    }\n  )\n  .action(async (files: string[], options: FormatOptions) => {\n    await formatCommand(files, process.stdin.isTTY ? null : process.stdin, process.stdout, options)\n  })\n\nprogram.parse(process.argv)\n"]}