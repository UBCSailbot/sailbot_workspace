{"version":3,"file":"parse.js","sourceRoot":"","sources":["../../test/parse.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6DAA8C;AAC9C,+CAK0B;AAE1B,SAAwB,KAAK,CAC3B,MAAc,EACd,eAEoC,IAAI,oCAA0B,EAAE;IAEpE,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,EAAE,CAAA;IACzC,MAAM,MAAM,GAAG,IAAI,gBAAM,CAAC,IAAI,oBAAU,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC,CAAA;IAC9D,IAAI;QACF,MAAM,eAAe,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QAC5C,eAAe,CAAC,GAAG,GAAG,EAAE,CAAA;QACxB,OAAO,eAAe,CAAA;KACvB;IAAC,OAAO,GAAG,EAAE;QACZ,GAAG,CAAC,OAAO,IAAI,KAAK,MAAM,EAAE,CAAA;QAC5B,MAAM,GAAG,CAAA;KACV;AACH,CAAC;AAhBD,wBAgBC","sourcesContent":["import * as messages from '@cucumber/messages'\nimport {\n  AstBuilder,\n  Parser,\n  GherkinClassicTokenMatcher,\n  GherkinInMarkdownTokenMatcher,\n} from '@cucumber/gherkin'\n\nexport default function parse(\n  source: string,\n  tokenMatcher:\n    | GherkinClassicTokenMatcher\n    | GherkinInMarkdownTokenMatcher = new GherkinClassicTokenMatcher()\n): messages.GherkinDocument {\n  const newId = messages.IdGenerator.uuid()\n  const parser = new Parser(new AstBuilder(newId), tokenMatcher)\n  try {\n    const gherkinDocument = parser.parse(source)\n    gherkinDocument.uri = ''\n    return gherkinDocument\n  } catch (err) {\n    err.message += `\\n${source}`\n    throw err\n  }\n}\n"]}