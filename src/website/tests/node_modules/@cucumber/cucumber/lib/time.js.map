{"version":3,"file":"time.js","sourceRoot":"","sources":["../src/time.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAAwC;AACxC,6DAA8C;AAa9C,MAAM,OAAO,GAAqC;IAChD,aAAa,EAAE,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC;IACzC,YAAY,EAAE,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC;IACvC,IAAI;IACJ,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC;IACrC,UAAU,EAAE,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC;IACnC,WAAW,EAAX,wBAAW;CACZ,CAAA;AAED,IAAI,OAAO,YAAY,KAAK,WAAW,EAAE;IACvC,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;IAChD,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;CACrD;AAED,SAAgB,yBAAyB,CACvC,gBAAoC,EACpC,iBAAqC;IAErC,MAAM,cAAc,GAClB,QAAQ,CAAC,cAAc,CAAC,iCAAiC,CACvD,iBAAiB,CAClB;QACD,QAAQ,CAAC,cAAc,CAAC,iCAAiC,CAAC,gBAAgB,CAAC,CAAA;IAC7E,OAAO,QAAQ,CAAC,cAAc,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAA;AACvE,CAAC;AAVD,8DAUC;AAEM,KAAK,UAAU,sBAAsB,CAC1C,OAAmB,EACnB,qBAA6B,EAC7B,iBAAyB,EAAE;IAE3B,IAAI,SAAwC,CAAA;IAC5C,IAAI,cAAc,KAAK,EAAE,EAAE;QACzB,cAAc,GAAG,kCAAkC,qBAAqB,eAAe,CAAA;KACxF;IACD,MAAM,cAAc,GAAG,IAAI,OAAO,CAAI,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACxD,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE;YAClC,MAAM,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAA;QACnC,CAAC,EAAE,qBAAqB,CAAC,CAAA;IAC3B,CAAC,CAAC,CAAA;IACF,OAAO,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,CAChE,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAChC,CAAA;AACH,CAAC;AAjBD,wDAiBC;AAED,kBAAe,OAAO,CAAA","sourcesContent":["import { performance } from 'perf_hooks'\nimport * as messages from '@cucumber/messages'\n\ninterface ProtectedTimingBuiltins {\n  clearImmediate: typeof clearImmediate\n  clearInterval: typeof clearInterval\n  clearTimeout: typeof clearTimeout\n  Date: typeof Date\n  setImmediate: typeof setImmediate\n  setInterval: typeof setInterval\n  setTimeout: typeof setTimeout\n  performance: typeof performance\n}\n\nconst methods: Partial<ProtectedTimingBuiltins> = {\n  clearInterval: clearInterval.bind(global),\n  clearTimeout: clearTimeout.bind(global),\n  Date,\n  setInterval: setInterval.bind(global),\n  setTimeout: setTimeout.bind(global),\n  performance,\n}\n\nif (typeof setImmediate !== 'undefined') {\n  methods.setImmediate = setImmediate.bind(global)\n  methods.clearImmediate = clearImmediate.bind(global)\n}\n\nexport function durationBetweenTimestamps(\n  startedTimestamp: messages.Timestamp,\n  finishedTimestamp: messages.Timestamp\n): messages.Duration {\n  const durationMillis =\n    messages.TimeConversion.timestampToMillisecondsSinceEpoch(\n      finishedTimestamp\n    ) -\n    messages.TimeConversion.timestampToMillisecondsSinceEpoch(startedTimestamp)\n  return messages.TimeConversion.millisecondsToDuration(durationMillis)\n}\n\nexport async function wrapPromiseWithTimeout<T>(\n  promise: Promise<T>,\n  timeoutInMilliseconds: number,\n  timeoutMessage: string = ''\n): Promise<T> {\n  let timeoutId: ReturnType<typeof setTimeout>\n  if (timeoutMessage === '') {\n    timeoutMessage = `Action did not complete within ${timeoutInMilliseconds} milliseconds`\n  }\n  const timeoutPromise = new Promise<T>((resolve, reject) => {\n    timeoutId = methods.setTimeout(() => {\n      reject(new Error(timeoutMessage))\n    }, timeoutInMilliseconds)\n  })\n  return await Promise.race([promise, timeoutPromise]).finally(() =>\n    methods.clearTimeout(timeoutId)\n  )\n}\n\nexport default methods\n"]}