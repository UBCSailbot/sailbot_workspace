"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.teardownEnvironment = exports.setupEnvironment = void 0;
const path_1 = __importDefault(require("path"));
const fs_1 = __importDefault(require("mz/fs"));
const reindent_template_literals_1 = require("reindent-template-literals");
const stream_1 = require("stream");
const messages_1 = require("@cucumber/messages");
const newId = messages_1.IdGenerator.uuid();
async function setupEnvironment() {
    const cwd = path_1.default.join(__dirname, '..', '..', 'tmp', `api_${newId()}`);
    await fs_1.default.mkdir(path_1.default.join(cwd, 'features'), { recursive: true });
    await fs_1.default.writeFile(path_1.default.join(cwd, 'features', 'test.feature'), (0, reindent_template_literals_1.reindent)(`Feature: test fixture
      Scenario: one
        Given a step
        Then another step`));
    await fs_1.default.writeFile(path_1.default.join(cwd, 'features', 'steps.ts'), (0, reindent_template_literals_1.reindent)(`import { Given, Then } from '../../../src'
    Given('a step', function () {})
    Then('another step', function () {})`));
    await fs_1.default.writeFile(path_1.default.join(cwd, 'cucumber.mjs'), `export default {paths: ['features/test.feature'], requireModule: ['ts-node/register'], require: ['features/steps.ts']}`);
    const stdout = new stream_1.PassThrough();
    return { cwd, stdout };
}
exports.setupEnvironment = setupEnvironment;
async function teardownEnvironment(environment) {
    return new Promise((resolve) => {
        fs_1.default.rm(environment.cwd, { recursive: true }, resolve);
    }).then(() => {
        environment.stdout.end();
    });
}
exports.teardownEnvironment = teardownEnvironment;
//# sourceMappingURL=test_helpers.js.map