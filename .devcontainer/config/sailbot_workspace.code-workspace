{
	"folders": [
		{
			"path": "../.."
		},
		{
			"path": "../../../catkin_ws/src/boat_controller"
		},
		{
			"path": "../../../catkin_ws/src/local-pathfinding"
		},
		{
			"path": "../../../catkin_ws/src/sailbot-msg"
		}
	],
	"settings": {
		"editor.tabSize": 4,
		"editor.rulers": [120],
		"files.associations": {
			"*.repos": "yaml",
			"*.world": "xml",
			"*.xacro": "xml"
		},
		"python.analysis.extraPaths": [
			"/workspaces/catkin_ws/devel/lib/python2.7/dist-packages",
			"/opt/ros/melodic/lib/python2.7/dist-packages",
			"/workspaces/sailbot_workspace/install/lib/python3.6/site-packages",
			"/opt/ros/eloquent/lib/python3.6/site-packages"
		],
		// Autocomplete from ros python packages
		"python.autoComplete.extraPaths": [
			"/workspaces/catkin_ws/devel/lib/python2.7/dist-packages",
			"/opt/ros/melodic/lib/python2.7/dist-packages",
			"/workspaces/sailbot_workspace/install/lib/python3.6/site-packages",
			"/opt/ros/eloquent/lib/python3.6/site-packages"
		],
		// Environment file lets vscode find python files within workspace
		"python.envFile": "/workspaces/sailbot_workspace/.env",
		// Use the system installed version of autopep8
		"python.formatting.autopep8Path": "/usr/bin/autopep8",
		"python.formatting.autopep8Args": [
			"--max-line-length=120"
		],
		"C_Cpp.default.intelliSenseMode": "linux-gcc-x86",
		"C_Cpp.formatting": "Disabled",
		"uncrustify.configPath.linux": "/opt/ros/eloquent/lib/python3.6/site-packages/ament_uncrustify/configuration/ament_code_style.cfg",
		"[cpp]": {
			"editor.defaultFormatter": "zachflower.uncrustify"
		},
		"search.exclude": {
			"**/build": true,
			"**/install": true,
			"**/log": true
		},
		"workbench.colorCustomizations": {
			"activityBar.activeBackground": "#19488d",
			"activityBar.activeBorder": "#dd4181",
			"activityBar.background": "#19488d",
			"activityBar.foreground": "#e7e7e7",
			"activityBar.inactiveForeground": "#e7e7e799",
			"activityBarBadge.background": "#dd4181",
			"activityBarBadge.foreground": "#e7e7e7",
			"sash.hoverBorder": "#19488d",
			"statusBar.background": "#113262",
			"statusBar.foreground": "#e7e7e7",
			"statusBarItem.hoverBackground": "#19488d",
			"statusBarItem.remoteBackground": "#113262",
			"statusBarItem.remoteForeground": "#e7e7e7",
			"titleBar.activeBackground": "#113262",
			"titleBar.activeForeground": "#e7e7e7",
			"titleBar.inactiveBackground": "#11326299",
			"titleBar.inactiveForeground": "#e7e7e799",
			"commandCenter.border": "#e7e7e799"
		},
		"cSpell.enabled": true,
		"cSpell.allowCompoundWords": true,
		"cSpell.ignorePaths": [
			"package-lock.json",
			"node_modules",
			"vscode-extension",
			".git/objects",
			".vscode",
			".vscode-insiders",
			".devcontainer/devcontainer.json"
		],
		"cSpell.words": [
			"athackst",
			"autopep",
			"buildx",
			"cmake",
			"cppcheck",
			"cppdbg",
			"cpplint",
			"DCMAKE",
			"deque",
			"devcontainer",
			"gaurav",
			"ints",
			"noqa",
			"pallete",
			"pytest",
			"Raye",
			"rclcpp",
			"rclpy",
			"repos",
			"rosdep",
			"rosdistro",
			"rosidl",
			"RTPS",
			"srcnew",
			"srcraye",
			"ubcsailbot",
			"uncrustify",
			"Wextra",
			"Wpedantic",
			"xmllint"
		]
	},
	"launch": {
		// Use IntelliSense to learn about possible attributes.
		// Hover to view descriptions of existing attributes.
		// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
		"version": "0.2.0",
		"configurations": [
			{
			"name": "Launch Python File",
			"type": "python",
			"request": "launch",
			"program": "${file}",
			"console": "integratedTerminal",
			},
			{
			"name": "Launch Cpp Program",
			"type": "cppdbg",
			"request": "launch",
			"program": "${workspaceFolder}/install/lib/${input:package}/${input:program}",
			"args": [],
			"preLaunchTask": "Build",
			"stopAtEntry": true,
			"cwd": "${workspaceFolder}",
			"externalConsole": false,
			"MIMode": "gdb",
			"setupCommands": [
				{
				"description": "Enable pretty-printing for gdb",
				"text": "-enable-pretty-printing",
				"ignoreFailures": true
				}
			]
			}
		],
		"inputs": [
			{
			"id": "package",
			"type": "promptString",
			"description": "Package name",
			"default": "examples_rclcpp_minimal_publisher"
			},
			{
			"id": "program",
			"type": "promptString",
			"description": "Program name",
			"default": "publisher_member_function"
			}
		]
	},
	"tasks": {
		// See https://go.microsoft.com/fwlink/?LinkId=733558
		// for the documentation about the tasks.json format
		"version": "2.0.0",
		"tasks": [
			// Build tasks
			{
				"label": "Build",
				"detail": "Build workspace (default)",
				"type": "shell",
				"command": "./build.sh",
				"group": {
					"kind": "build",
					"isDefault": true
				},
				"problemMatcher": "$gcc"
			},
			{
				"label": "debug",
				"detail": "Build workspace (debug)",
				"type": "shell",
				"command": "./build.sh",
				"options": {
					"env": {
						"BUILD_TYPE": "Debug"
					}
				},
				"group": "build",
				"problemMatcher": "$gcc"
			},
			// Test tasks
			{
				"label": "test",
				"detail": "Run all unit tests and show results.",
				"type": "shell",
				"command": "./test.sh",
				"group": {
					"kind": "test",
					"isDefault": true
				}
			},
			// Clean
			{
				"label": "clean",
				"detail": "Run the clean target",
				"type": "shell",
				"command": "colcon build --merge-install --cmake-target clean",
				"problemMatcher": "$gcc"
			},
			{
				"label": "purge",
				"detail": "Purge workspace by deleting all generated files.",
				"type": "shell",
				"command": "rm -fr build install log; py3clean .",
				"problemMatcher": []
			},
			// Linting and static code analysis tasks
			{
				"label": "fix",
				"detail": "Reformat files with uncrustify.",
				"type": "shell",
				"command": "ament_uncrustify --reformat src/",
				"problemMatcher": []
			},
			{
				"label": "uncrustify",
				"detail": "Lint files with uncrustify.",
				"type": "shell",
				"command": "ament_uncrustify src/",
				"presentation": {
					"panel": "dedicated",
					"reveal": "silent",
					"clear": true
				},
				"problemMatcher": [
					{
						"owner": "uncrustify",
						"source": "uncrustify",
						"fileLocation": "relative",
						"pattern": [
							// just the file name message
							{
								"regexp": "^(.*)'(.*)':",
								"kind": "file",
								"file": 2,
								"message": 1
							}
						]
					}
				]
			},
			{
				"label": "cpplint",
				"detail": "Lint files with cpplint.",
				"type": "ament",
				"task": "cpplint",
				"path": "src/",
				"problemMatcher": [
					"$ament_cpplint"
				],
				"presentation": {
					"panel": "dedicated",
					"reveal": "silent",
					"clear": true
				},
			},
			{
				"label": "cppcheck",
				"detail": "Run static code checker cppcheck.",
				"type": "ament",
				"task": "cppcheck",
				"path": "src/",
				"problemMatcher": [
					"$ament_cppcheck"
				],
				"presentation": {
					"panel": "dedicated",
					"reveal": "silent",
					"clear": true
				},
			},
			{
				"label": "lint_cmake",
				"detail": "Run lint on cmake files.",
				"type": "ament",
				"task": "lint_cmake",
				"path": "src/",
				"problemMatcher": [
					"$ament_lint_cmake"
				],
				"presentation": {
					"panel": "dedicated",
					"reveal": "silent",
					"clear": true
				}
			},
			{
				"label": "flake8",
				"detail": "Run flake8 on python files.",
				"type": "ament",
				"task": "flake8",
				"path": "src/",
				"problemMatcher": [
					"$ament_flake8"
				],
				"presentation": {
					"panel": "dedicated",
					"reveal": "silent",
					"clear": true
				}
			},
			{
				"label": "pep257",
				"detail": "Run pep257 on python files.",
				"type": "ament",
				"task": "pep257",
				"path": "src/",
				"problemMatcher": [
					"$ament_pep257"
				],
				"presentation": {
					"panel": "dedicated",
					"reveal": "silent",
					"clear": true
				}
			},
			{
				"label": "xmllint",
				"detail": "Run xmllint on xml files.",
				"type": "ament",
				"task": "xmllint",
				"path": "src/",
				"problemMatcher": [ 
					"$ament_xmllint",
				],
				"presentation": {
					"panel": "dedicated",
					"reveal": "silent",
					"clear": true
				}
			},
			{
				"label": "lint all",
				"detail": "Run all linters.",
				"dependsOn": [
					"cppcheck",
					"cpplint",
					"flake8",
					"lint_cmake",
					"pep257",
					"xmllint",
					"uncrustify"
				],
				"problemMatcher": []
			},
			// Workspace editing tasks
			{
				"label": "new ament_cmake package",
				"detail": "Create a new ROS cpp package from a template.",
				"type": "shell",
				"command": "ros2 pkg create --destination-directory src --build-type ament_cmake ${input:package}",
				"problemMatcher": []
			},
			{
				"label": "new ament_python package",
				"detail": "Create a new ROS python package from a template.",
				"type": "shell",
				"command": "ros2 pkg create --destination-directory src --build-type ament_python ${input:package}",
				"problemMatcher": []
			},
			{
				"label": "new ament_cmake package with a node",
				"detail": "Create a new ROS cpp package with a node from a template.",
				"type": "shell",
				"command": "ros2 pkg create --destination-directory src --build-type ament_cmake ${input:package} --node-name ${input:node}",
				"problemMatcher": []
			},
			{
				"label": "new ament_python package with a node",
				"detail": "Create a new ROS python package with a node from a template.",
				"type": "shell",
				"command": "ros2 pkg create --destination-directory src --build-type ament_python ${input:package} --node-name ${input:node}",
				"problemMatcher": []
			},
			{
				"label": "import from workspace file",
				"detail": "Use vcs to import modules specified by a workspace/rosinstall file.",
				"type": "shell",
				"command": "vcs import < src/new_project.repos src",
				"problemMatcher": []
			},
			{
				"label": "update workspace file",
				"detail": "Use vcs to update repositories in src to workspace file.",
				"type": "shell",
				"command": "vcs export src > src/new_project.repos",
				"problemMatcher": []
			},
			{
				"label": "install dependencies",
				"detail": "Install all dependencies specified in the workspaces package.xml files.",
				"type": "shell",
				"command": "sudo apt-get update && rosdep update && rosdep install --from-paths src --ignore-src -y",
				"problemMatcher": []
			},
			{
				"label": "setup",
				"detail": "Set up the workspace",
				"type": "shell",
				"command": "./setup.sh",
				"problemMatcher": []
			}

		],
		"inputs": [
			{
			"id": "package",
			"type": "promptString",
			"description": "Package name"
			},
			{
			"id": "node",
			"type": "promptString",
			"description": "Node name"
			}
		]
	}
}