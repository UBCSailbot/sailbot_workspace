name: Test Definitions

on:
  # Called by other workflows: https://docs.github.com/en/actions/using-workflows/reusing-workflows#creating-a-reusable-workflow
  workflow_call:
    inputs:
      # The repository name: ${{ github.event.repository.name }}
      repository:
        required: true
        type: string
      # If true, runs the ROS tests and linters
      # Set to true for ROS packages
      ros-ci:
        required: true
        type: boolean
      # If true, runs clang-tidy
      # Takes a long time, so only set to true for C++ repositories
      clang-tidy:
        required: true
        type: boolean
      # If true, rebuilds our docs site https://ubcsailbot.github.io/docs/
      # Set to true if the docs site contains a snippet of a file in the repository
      rebuild-docs:
        required: true
        type: boolean
      # If true, runs the Markdown linters
      # True by default, disable only if there will never be Markdown files in the repository
      markdown-ci:
        required: false
        default: true
        type: boolean
    secrets:
      # A GitHub token with access to our docs site https://ubcsailbot.github.io/docs/
      # If rebuild-docs is true:
      # 1. Create the repository secret PAT_TOKEN (copy from Bitwarden)
      # 2. Set to ${{ secrets.PAT_TOKEN }}
      gh-token:
        required: false

jobs:
  # Adapted from https://github.com/actions/toolkit/issues/1264#issuecomment-1770928498
  extract-metadata:
    runs-on: ubuntu-latest
    permissions:
      actions: read
    outputs:
      caller-ref: ${{ steps.workflows-ref.outputs.caller-ref }}
    steps:
      - name: Get workflow reference
        id: workflows-ref
        run: |
          ref=$(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.gh-token }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/UBCSailbot/${{ inputs.repository }}/actions/runs/${{ github.run_id }} | jq -r '.referenced_workflows[0] | .ref')
          echo "caller-ref=$ref" >> $GITHUB_OUTPUT

  colcon-test:
    runs-on: ubuntu-latest
    if: ${{ inputs.ros-ci }}
    needs: [extract-metadata]
    steps:
    - name: Checkout workspace
      uses: actions/checkout@v4
      with:
          repository: UBCSailbot/sailbot_workspace
          ref: ${{ needs.extract-metadata.outputs.caller-ref }}

    - name: Checkout repositories
      uses: ./.github/actions/checkout/
      with:
          repository: ${{ inputs.repository }}

    - name: Test
      uses: ./.github/actions/test/
      with:
        disable_vcs: ${{ inputs.repository != 'sailbot_workspace' }}

  ament-lint:
    strategy:
      fail-fast: false
      matrix:
          # mypy and ament_lint_common, except for copyright, cppcheck, cpplint, uncrustify, and pep257
          linter: [lint_cmake, flake8, mypy, xmllint]
    name: ament_${{ matrix.linter }}
    runs-on: ubuntu-latest
    if: ${{ inputs.ros-ci }}
    needs: [extract-metadata]
    steps:
    - name: Checkout workspace
      uses: actions/checkout@v4
      with:
          repository: UBCSailbot/sailbot_workspace
          ref: ${{ needs.extract-metadata.outputs.caller-ref }}

    - name: Checkout repositories
      uses: ./.github/actions/checkout/
      with:
          repository: ${{ inputs.repository }}

    - name: Run linter
      uses: ./.github/actions/ament-lint/
      with:
        linter: ${{ matrix.linter }}
        disable_vcs: ${{ inputs.repository != 'sailbot_workspace' }}

  clang-tidy:
    runs-on: ubuntu-latest
    if: inputs.clang-tidy
    needs: [extract-metadata]
    steps:
    - name: Checkout workspace
      uses: actions/checkout@v4
      with:
          repository: UBCSailbot/sailbot_workspace
          ref: ${{ needs.extract-metadata.outputs.caller-ref }}

    - name: Checkout repositories
      uses: ./.github/actions/checkout/
      with:
          repository: ${{ inputs.repository }}

    - name: Run linter
      uses: ./.github/actions/clang-tidy/
      with:
        disable_vcs: ${{ inputs.repository != 'sailbot_workspace' }}

  # https://github.com/nosborn/github-action-markdown-cli
  markdownlint:
    runs-on: ubuntu-latest
    if: ${{ inputs.markdown-ci }}
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
          repository: UBCSailbot/${{ inputs.repository }}

    - name: Run linter
      uses: nosborn/github-action-markdown-cli@v3.3.0
      with:
        config_file: .markdownlint.json
        files: .
        dot: true

  # https://github.com/gaurav-nelson/github-action-markdown-link-check
  markdown-link-check:
    runs-on: ubuntu-latest
    if: ${{ inputs.markdown-ci }}
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
          repository: UBCSailbot/sailbot_workspace

    - name: Run linter
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        config-file: .markdown-link-check.json
        folder-path: .

  # Rebuilds our docs site https://ubcsailbot.github.io/docs/
  rebuild-docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && inputs.rebuild-docs
    needs: [markdownlint, markdown-link-check]
    steps:
    - name: Dispatch Docs Tests workflow to publish site
      # https://github.com/orgs/community/discussions/26323#discussioncomment-5600001
      run: |
          gh workflow run tests.yml -R UBCSailbot/docs
          sleep 5
          gh run watch -R UBCSailbot/docs $(gh run list -R UBCSailbot/docs -w tests.yml -L1 --json databaseId --jq '.[0].databaseId')
    env:
      GH_TOKEN: ${{ secrets.gh-token }}

  # Runs Sailbot Workspace CI
  run-sailbot-workspace-ci:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && inputs.repository != 'sailbot_workspace' && inputs.repository != 'docs'
    steps:
    - name: Dispatch Sailbot Workspace Tests workflow to run CI
      # https://github.com/orgs/community/discussions/26323#discussioncomment-5600001
      run: |
          gh workflow run tests.yml -R UBCSailbot/sailbot_workspace
          sleep 5
          gh run watch -R UBCSailbot/sailbot_workspace $(gh run list -R UBCSailbot/sailbot_workspace -w tests.yml -L1 --json databaseId --jq '.[0].databaseId')
    env:
      GH_TOKEN: ${{ secrets.gh-token }}
